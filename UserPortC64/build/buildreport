
; ******** Source: source\user.asm
     1                          
     2                             !convtab pet   ;key in and text out conv to PetSCII throughout
     3                           
     4                             PacketSize = 64
     5                          
     6                             ;Registers:
     7                             PtrAddrLo  = $fb
     8                             PtrAddrHi  = $fc
     9                             LastPage   = $fd
    10                             UserPAIO   = $dd00
    11                             UserPBIO   = $dd01
    12                             UserPADir  = $dd02
    13                             UserPBDir  = $dd03
    14                             UserPICR   = $dd0d
    15                                
    16                             ;Kernal routines:
    17                             SendChar = $ffd2
    18                             ScanKey  = $ff9f ;SCNKEY
    19                             GetIn    = $ffe4 ;GETIN
    20                             
    21                             ;BASIC routines:
    22                             PrintString = $ab1e
    23                             
    24                             ;code locations (saved to prg):
    25                          	;BasicStart = $0801
    26                             ;code       = $0810 ;2064
    27                             code       = $c000  ;49152
    28                             
    29                             
    30                          ;   *=BasicStart
    31                          ;   ;BASIC SYS header
    32                          ;   !byte $0b,$08,$01,$00,$9e  ; Line 1 SYS
    33                          ;   !tx "2064" ;dec address for sys start in text
    34                          ;   !byte $00,$00,$00
    35                             
    36                             *=code  ; Start location for code
    37                          
    38                          ;Setup stuff:
    39  c000 78                    sei
    40  c001 a92c                  lda #<MsgWelcome
    41  c003 a0c1                  ldy #>MsgWelcome
    42  c005 201eab                jsr PrintString   
    43                             
    44  c008 a900                  lda #$00
    45  c00a 8d03dd                sta UserPBDir  ;set all of PB as inputs
    46                             
    47  c00d ad02dd                lda UserPADir
    48  c010 0904                  ora #%00000100 ;set bit 2
    49  c012 8d02dd                sta UserPADir  ;set PA.2 as output
    50  c015 ad00dd                lda UserPAIO   
    51  c018 29fb                  and #%11111011 ;clear bit 2 (not ready)
    52  c01a 8d00dd                sta UserPAIO   ;set ready output low
    53                            
    54                          ;Main routine:
    55                          Main:
    56  c01d a94a                  lda #<MsgWaiting
    57  c01f a0c1                  ldy #>MsgWaiting
    58  c021 201eab                jsr PrintString   ;display waiting message
    59                             
    60  c024 20dfc0                jsr ReceiveByte
    61  c027 c9b9                  cmp #$B9  ;magic number to start
    62  c029 f005                  beq cont1
    63  c02b a901                  lda #$01  ;unexpected start byte
    64  c02d 4ccbc0                jmp ErrOut
    65                          cont1:   
    66                             
    67  c030 a95f                  lda #<MsgReceiving
    68  c032 a0c1                  ldy #>MsgReceiving
    69  c034 201eab                jsr PrintString   ;display receiving message
    70                             
    71  c037 20dfc0                jsr ReceiveByte  ;size in 256 byte pages
    72  c03a 85fd                  sta LastPage     ;store last page hi addr
    73                            
    74  c03c 20dfc0                jsr ReceiveByte
    75  c03f 85fb                  sta PtrAddrLo
    76  c041 c901                  cmp #$01  ;StartAddr Low, forcing $0801
    77  c043 f005                  beq cont2
    78  c045 a902                  lda #$02  ;StartAddr Low
    79  c047 4ccbc0                jmp ErrOut
    80                          cont2: 
    81                            
    82  c04a 20dfc0                jsr ReceiveByte
    83  c04d 85fc                  sta PtrAddrHi
    84  c04f c908                  cmp #$08  ;StartAddr High, forcing $0801
    85  c051 f005                  beq cont3
    86  c053 a903                  lda #$03  ;StartAddr High
    87  c055 4ccbc0                jmp ErrOut
    88                          cont3:   
    89                          
    90  c058 18                    clc
    91  c059 65fd                  adc LastPage     ;add start address page to size 
    92  c05b 85fd                  sta LastPage     ;store last page hi addr
    93                          
    94  c05d a000                  ldy #$00       ;reset packet index
    95                          ReadyNext:
    96  c05f 20dfc0                jsr ReceiveByte
    97  c062 91fb                  sta (PtrAddrLo), y   ;save byte in mem
    98  c064 c8                    iny
    99  c065 d0f8                  bne ReadyNext
   100                             
   101  c067 e6fc                  inc PtrAddrHi
   102  c069 a5fc                  lda PtrAddrHi
   103  c06b c5fd                  cmp LastPage
   104  c06d d0f0                  bne ReadyNext
   105                             
   106  c06f a96d                  lda #<MsgFinished
   107  c071 a0c1                  ldy #>MsgFinished
   108  c073 201eab                jsr PrintString
   109                          
   110                          ;   *********  end options, What now?   ***********
   111                          EndOption:
   112  c076 a977                  lda #<MsgOptions
   113  c078 a0c1                  ldy #>MsgOptions
   114  c07a 201eab                jsr PrintString
   115                          
   116                          WaitForKey:     ;"Select: Run, Save, rEstart, Disp, or Quit"
   117  c07d 209fff                jsr ScanKey  ; (since interrupts are disabled)
   118  c080 20e4ff                jsr GetIn    ;
   119  c083 f0f8                  beq WaitForKey
   120                          
   121  c085 c945                  cmp #'e'  
   122  c087 f094                  beq Main
   123                             
   124  c089 c952                  cmp #'r'  
   125  c08b d019                  bne notR
   126                             ;could load keyboard buffer with "run":  https://retro64.altervista.org/blog/commodore-64-keyboard-buffer-tricks-deleting-and-creating-basic-lines-from-basic/
   127  c08d a952                  lda #'r'
   128  c08f 8d7702                sta $0277  ;kbd buff 0
   129  c092 a955                  lda #'u'
   130  c094 8d7802                sta $0278 ;kbd buff 1
   131  c097 a94e                  lda #'n'
   132  c099 8d7902                sta $0279  ;kbd buff 2
   133  c09c a90d                  lda #13
   134  c09e 8d7a02                sta $027a  ;kbd buff 3
   135  c0a1 a904                  lda #4
   136  c0a3 85c6                  sta $C6  ;# chars in kbd buff (10 max)
   137  c0a5 60                    rts ;return to BASIC
   138                           notR:
   139                          
   140  c0a6 c951                  cmp #'q'  
   141  c0a8 d001                  bne notQ
   142  c0aa 60                    rts ;return to BASIC
   143                          notQ:
   144                          
   145  c0ab c944                  cmp #'d'  
   146  c0ad d015                  bne notD
   147  c0af a000                  ldy #$00   ;index
   148                          DispLoop:     ;first 100 bytes from $0801
   149  c0b1 b90108                lda $0801, y
   150  c0b4 20fac0                jsr PrintHexByte
   151  c0b7 c8                    iny
   152  c0b8 c064                  cpy #100
   153  c0ba d0f5                  bne DispLoop
   154  c0bc a90d                  lda #13
   155  c0be 20d2ff                jsr SendChar
   156  c0c1 4c76c0                jmp EndOption
   157                          notD:
   158                          
   159  c0c4 c953                  cmp #'s'  
   160  c0c6 d000                  bne notS
   161                             ;save not yet implemented...
   162                             
   163                          notS:
   164                          
   165  c0c8 4c76c0             jmp EndOption   ; try again...  
   166                             
   167                          
   168                             
   169                          ErrOut:   
   170                             ;ErrNum stored in acc
   171  c0cb 48                    pha
   172  c0cc a924                  lda #<MsgError
   173  c0ce a0c1                  ldy #>MsgError
   174  c0d0 201eab                jsr PrintString   
   175  c0d3 68                    pla
   176  c0d4 20fac0                jsr PrintHexByte
   177  c0d7 a90d                  lda #13
   178  c0d9 20d2ff                jsr SendChar
   179  c0dc 4c76c0                jmp EndOption
   180                           
   181                           
   182                           
   183                          ;   *********************** Subroutines *********************** 
   184                           
   185                          ReceiveByte:
   186                             ;Receives one byte from parallel port, then back to not ready
   187                             ;returns value in acc
   188                             ; X and Y not touched
   189  c0df ad00dd                lda UserPAIO   
   190  c0e2 0904                  ora #%00000100 ;set bit 2 (ready)
   191  c0e4 8d00dd                sta UserPAIO   ;set ready output high
   192                          
   193  c0e7 a910                  lda #%00010000 ;mask bit 4 (Flag pin)
   194                          lpForFlag:        ;wait for high to low transition on Flag2 pin
   195  c0e9 2c0ddd                bit UserPICR   ;self clearing on read
   196  c0ec f0fb                  beq lpForFlag
   197                          
   198  c0ee ad00dd                lda UserPAIO   
   199  c0f1 29fb                  and #%11111011 ;clear bit 2 (not ready)
   200  c0f3 8d00dd                sta UserPAIO   ;set ready output low
   201                             
   202  c0f6 ad01dd                lda UserPBIO  ;grab byte
   203  c0f9 60                    rts
   204                           
   205                          PrintHexByte:
   206                             ;Print byte value stored in acc in hex
   207                             ;  2 chars plus 2 spaces
   208                             ;trashes acc
   209  c0fa 48                    pha
   210  c0fb 6a                    ror
   211  c0fc 6a                    ror
   212  c0fd 6a                    ror
   213  c0fe 6a                    ror
   214  c0ff 2011c1                jsr PrintHexNibble
   215  c102 68                    pla
   216  c103 2011c1                jsr PrintHexNibble
   217  c106 a920                  lda #' '
   218  c108 20d2ff                jsr SendChar
   219  c10b a920                  lda #' '
   220  c10d 20d2ff                jsr SendChar
   221  c110 60                    rts
   222                             
   223                          PrintHexNibble:   
   224                             ;Print value stored in lower nible acc in hex
   225                             ;trashes acc
   226  c111 290f                  and #$0f
   227  c113 c90a                  cmp #$0a
   228  c115 1006                  bpl letter 
   229  c117 18                    clc
   230  c118 6930                  adc #'0'
   231  c11a 4c20c1                jmp printret
   232                          letter:
   233  c11d 18                    clc
   234  c11e 6937                  adc #'a'-$0a
   235                          printret:
   236  c120 20d2ff                jsr SendChar
   237  c123 60                    rts
   238                           
   239                          ;   *********************** Strings/Messages *********************** 
   240                          
   241                          MsgError:
   242  c124 c552524f52202300      !tx "Error #", 0
   243                          MsgWelcome:       ;clr screen, wht char, lower case
   244  c12c 93050ed452415627...   !tx 147, 5, 14, "Trav's para-user app 0.03", 13, 0
   245                          MsgWaiting:
   246  c14a d7414954494e4720...   !tx "Waiting for host...", 13, 0
   247                          MsgReceiving:
   248  c15f d24543454956494e...   !tx "Receiving...", 13, 0
   249                          MsgFinished:
   250  c16d c6494e4953484544...   !tx "Finished", 13, 0
   251                          MsgOptions:
   252  c177 0dd2554e2c20d341...   !tx 13, "Run, Save, rEstart, Disp, or Quit...", 13, 0
   253                             
   254                             
